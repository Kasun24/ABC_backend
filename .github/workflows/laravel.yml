name: Laravel CI

# This will run the workflow on every push and pull request to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    # The environment where the tests will run
    runs-on: ubuntu-latest

    services:
      # Setting up MySQL service
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_DATABASE: abc_restaurant
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=10s
          --health-retries=5

    steps:
      # Check out the code from your repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up PHP with the desired version
      - name: Set up PHP, with extensions and tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.4"
          extensions: mbstring, pdo, pdo_mysql
          tools: composer, phpunit

      # Install Composer dependencies
      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      # Copy .env file for Laravel and set application key
      - name: Set up Laravel environment
        run: |
          cp .env.example .env
          php artisan key:generate
          echo "APP_ENV=testing" >> .env
          echo "APP_KEY=base64:yK6H5EPTtGEke16G30qUxkfjLgk/I24tmatUq8wgzDs=" >> .env
          echo "APP_DEBUG=true" >> .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=abc_restaurant" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=" >> .env
          echo "CACHE_DRIVER=array" >> .env
          echo "SESSION_DRIVER=array" >> .env
          echo "QUEUE_CONNECTION=sync" >> .env

      # Run database migrations
      - name: Run migrations
        run: php artisan migrate --env=testing

      # Run PHPUnit tests
      - name: Run tests
        run: php artisan test
